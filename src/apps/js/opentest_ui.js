
var action_args_object={
    "org.getopentest.selenium.AssertElementDisabled":{title:'AssertElementDisabled',args:[{'locator':''}],desc:'Verify that the  ${locator} button is disabled'},
    "org.getopentest.selenium.AssertElementEnabled":{title:'AssertElementEnabled',args:[{'locator':''}],desc:'Verify that the ${locator} button is enabled'},
    "org.getopentest.selenium.AssertElementHasClass":{title:'AssertElementHasClass',args:[{'locator':''},{'class':''}],desc:'Verify that the ${locator} button has class ${class}'},
    "org.getopentest.selenium.SendKeys":{title:'SendKeys',args:[{'locator':''},{'text':''},{'key':''},{'clearContent':''},{'sendEnter':''}],desc:'Type ${text} in the Google search box and press Enter'},
}

var actionDD= '<option value="">-Select Action-</option>'+
'<option value="org.getopentest.selenium.AssertElementDisabled">AssertElementDisabled</option>'+
'<option value="org.getopentest.selenium.AssertElementEnabled">AssertElementEnabled</option>'+
'<option value="org.getopentest.selenium.AssertElementHasClass">AssertElementHasClass</option>'+
'<option value="org.getopentest.selenium.SendKeys">SendKeys</option>';

/*function edit_row(no)
{
	document.getElementById("edit_button"+no).style.display="none";
	document.getElementById("save_button"+no).style.display="block";
	
	var action=document.getElementById("action_row"+no);
	var args=document.getElementById("args_row"+no);
	var desc=document.getElementById("desc_row"+no);
	
	var action_data=action.innerHTML;
	var args_data=args.innerHTML;
	var desc_data=desc.innerHTML;
	
	action.innerHTML='<select id=action_text'+no+' onchange="populateArgsAndDesc(this,'+no+')">'+actionDD+'</select>';
	args.innerHTML='<dl class="dropdown_Arug" id="args_text_p"'+no+' >  <dt> <a href="#">    <p class="multiSel"></p>    <span class="dropdown_img"></span> </a> </dt>     <dd>  <div class="mutliSelect" id="args_text"'+no+'> '+prepareEditArgs(action_data,args_data,no)+'</div> </dd> </dl>';
    desc.innerHTML="<div id='desc_text"+no+"'>"+desc_data+"</div>";   
	document.getElementById("action_text"+no).value=action_data;
}*/
function save_row()
{ 
    var opentestTableResult=[];
    var noActionCount=0;
    var isAnyChecked=false;
    $('#ot_data_table tr td:first-child input:checkbox').each(function () {
        if(!isAnyChecked){
            isAnyChecked = $(this).is(":checked");            
        }       
    });	

    $('#ot_data_table tr').each(function (index,row) {                
        if((!isAnyChecked && index!=0) || (isAnyChecked && $(this).find("td:first-child input:checkbox").is(":checked"))) {
            var actionVal=document.getElementById("action"+index).value;
            if(actionVal!=''){
                var rowData={
                    testStepNo:index,
                    action:actionVal,
                    testDescription:'',
                    nodeid:node_id,
                    testCondVersion_id:testCondVersion_id,
                    tool_id:tool_id,
                    tst_step_args:{},
                    stepId:''    
                };          
                var step_Id=document.getElementById("stepId"+index).value;
                $('#args'+index+' ul li  input[type="checkbox"]').each(function() {      
                    if (this.checked) {
                        var keyName=$(this).val(); 
                        var value=$('#'+keyName+index).val();
                        rowData.tst_step_args[keyName]=value;
                    }      
                });
                rowData.testDescription=document.getElementById("desc"+index).innerHTML;
                rowData.stepId=document.getElementById("stepId"+index).value;
                rowData.test_step_type=tool_type;
                opentestTableResult.push(rowData);  
            }else{
                noActionCount++;
            }
        }           
    });
    if(opentestTableResult.length>0){
        var data = {fileAdd:"OTTCU",teststep:opentestTableResult};
        sendAJAX(data,app_server_url,function(data){            
            if(data["code"] == '200'){
                //alert("Saved successfully");
                dailogmsg("Saved Test Steps successfully");
                //addNewRow(false);
                $("#ot_data_table td:first-child input:checkbox").each( function () {
                    $(this).prop('checked', false);
                });	
                $("#ot_data_table #chkAll").prop('checked', false);
                getOpenTestDataRows();                             
            }else{
                dailogmsg(data["msg"]);
            }
        });
    }else{
        if(noActionCount > 0){
            dailogmsg("Action is mandatory to save test condition");            
        }else{
            dailogmsg("No rows have been selected.Please select & Save");            
        }
    }
}

$(document).on('click','.mutliSelect ul li  input[type="checkbox"]',function() {  
    var isChecked=$(this).is(":checked");
    var parentId= $(this).parent().parent().parent().attr("id");
    var inputName=this.value;
    var rowNum=parentId.replace("args","");
    var inputId=inputName+rowNum;    
    if(isChecked){
        $("#"+inputId).prop('disabled', false);
    }else{
        $("#"+inputId).prop('disabled', true);
    }
});


function populateKeywordData(actionType,action,testData){
    if(actionType==undefined || actionType== ''){
        actionType='appium';
    }
    var data = {fileAdd:"GOK",key:actionType};
    sendAJAX(data,app_server_url,function(data){            
        if(data["code"] == '200'){
            //build keyword data objects
            buildKeyWordActionObjects(data.data);
            if(action=='GET'){
                getOpenTestDataRows();     
            }else{
                if(testData!= undefined && testData.length>0){
                    createOpenTestDataRows(testData);								
                }else{
                    addNewRow(true);
                }	
            }            
        }else{
            dailogmsg(data["msg"]);
        }
    });
}

function buildKeyWordActionObjects(keywords){
    actionDD= '<option value="">-Select Action-</option>';
    action_args_object={};
    if(keywords!=undefined && keywords.length >0){
        for(var kIndex=0;kIndex < keywords.length; kIndex++){
            var keywordAction=keywords[kIndex].keyword_action;
            var keyWordName=keywords[kIndex].keyword_name;
            var description=keywords[kIndex].keyword_description;
            actionDD+= '<option value="'+keywordAction+'">'+keyWordName+'</option>';
            action_args_object[keywordAction]={
                   title:keyWordName,
                   args:keywords[kIndex].key_args,
                   desc:description
            }
        }
    }
}


function delete_row()
{
    var stepIdArr=[];
    $('#ot_data_table tr').each(function (index,row) {                
        if($(this).find("td:first-child input:checkbox").is(":checked")) {
            var step_Id=document.getElementById("stepId"+index).value;
            if(step_Id!=null && step_Id!=0){
                stepIdArr.push(step_Id);
            }
            row.remove();
        }
    });
    var updateRows={};  
    $('#ot_data_table tr').each(function (index,row) {     
        $(this).find("td:eq(1)").html(index);
        var step_Id=$(this).find("td:first-child input:hidden").val();
        if(step_Id != null && step_Id!=0){
            updateRows[step_Id]  =index;
        }
    }); 
    console.log(updateRows);
    if(stepIdArr.length>0){    
        var data = {fileAdd:"OTTCD",delIds:stepIdArr,updateIds:updateRows};
        sendAJAX(data,app_server_url,function(data){            
            if(data["code"] == '200'){
                //alert("Saved successfully");
                dailogmsg("Deleted Test Steps successfully");
                //addNewRow(false);
                $("#ot_data_table td:first-child input:checkbox").each( function () {
                    $(this).prop('checked', false);
                });	
                $("#ot_data_table #chkAll").prop('checked', false);   
                getOpenTestDataRows();             
            }else{
                dailogmsg(data["msg"]);
            }
        });
    }else{
        dailogmsg("Deleted Test Steps successfully");
        $("#ot_data_table td:first-child input:checkbox").each( function () {
            $(this).prop('checked', false);
        });	
        $("#ot_data_table #chkAll").prop('checked', false);   
        addNewRow(false);
    }
}
function add_row()
{
    /*var table=document.getElementById("ot_data_table");
    var no=(table.rows.length)-1;
    var new_action=document.getElementById("action"+no).value;
    var step_Id=document.getElementById("stepId"+no).value;
    if(new_action!=''){
        var rowData={
            testStepNo:'',
            action:'',
            testDescription:'',
            nodeid:node_id,
            testCondVersion_id:testCondVersion_id,
            tool_id:tool_id,
            tst_step_args:''    
        };
        var new_args='';
        var argValues={};
        $('#args'+no+' ul li  input[type="checkbox"]').each(function() {      
            if (this.checked) {
                var keyName=$(this).val(); 
                var value=$('#'+keyName+no).val();
                argValues[keyName]=value;
            }      
        });
        var new_desc=document.getElementById("desc"+no).innerHTML;
        rowData.testDescription=new_desc;        
        rowData.action=new_action;        
        rowData.tst_step_args=argValues;     
        //addNewRow(table_len);
        var table=document.getElementById("ot_data_table");
        var  table_len=(table.rows.length)-1;
        rowData.testStepNo=table_len;    
        opentestTableResult.push(rowData);  
        var data = {fileAdd:"TCO",teststep:opentestTableResult};
        sendAJAX(data,app_server_url,function(data){            
            if(data["code"] == '200'){
                //alert("Saved successfully");
                console.log("Saved Test Steps successfully");
                addNewRow(false);
            }else{
                dailogmsg(data["msg"]);
            }
        });
    }else{
        alert('No action selected');
    }*/
    var table=document.getElementById("ot_data_table");
    var no=(table.rows.length)-1;
    var new_action=document.getElementById("action"+no).value;
    if(new_action!=''){
        addNewRow(false);
    }else{
        dailogmsg('No action selected');
    }
}

function createOpenTestDataRows(testData){
    $.each(testData, function (index, each_row) {
        if(index==0){
            addExistRow(true,each_row);
        }else{
            addExistRow(false,each_row);
        }
    });
}

function getOpenTestDataRows(){
    var data = {fileAdd:"TCA",n:node_id,testCondVersion_id:testCondVersion_id,tool_id:tool_id,actTyp:tool_type};
    sendAJAX(data,app_server_url,function(data){
        if(data["code"] == '200'){
            $('#opentest_wrapper table#ot_data_table').empty();
            if(data.data.testData!= undefined && data.data.testData.length>0){
                createOpenTestDataRows(data.data.testData);								
            }else{
                addNewRow(true);
            }	
        }
    });
}




function addExistRow(isAddHeaderRow,data){   
    if(isAddHeaderRow){
        addHeaderRow();
    }
    var table=document.getElementById("ot_data_table");
    var  table_len=(table.rows.length)-1;
    table_len++;
    var actionValues=action_args_object[data.action];    
    var args=prepareArgs(actionValues.args,table_len,data.tst_step_args);    
    var titleValue= '';
    if(data.tst_step_args!=undefined && data.tst_step_args!=null){
       var keys=Object.keys(data.tst_step_args);
       $.each(keys, function (argIndex, key) {
            var value=data.tst_step_args[key];
            if(value!=''){
                var title = key + ",";
                titleValue+='<span title="' + title + '">' + title + '</span>';
            }
       });
    }
    var actionDDSelected=prepareActionDropDownData(Object.keys(action_args_object),data.action);
    table.insertRow(table_len).outerHTML='<tr><td><input type="checkbox" id="chk'+table_len+'"/>'+
                '<input type="hidden" name="stepId" id="stepId'+table_len+'" value="'+data.id+'"></td>'+
                '<td>'+data.test_step_number+'</td>'+
                '<td><select id="action'+table_len+'" onchange="populateArgsAndDesc(this,'+table_len+')">'+actionDDSelected+'</select></td>'+
                '<td><dl class="dropdown_Arug" id="args_p'+table_len+'">           <dt><a href="#">     <p class="multiSel">'+titleValue+'</p>   <span class="dropdown_img"></span> </a> </dt>   <dd> <div class="mutliSelect" id="args'+table_len+'">'+args+'</div> </dd> </dl> </td>'+
                '<td><div id="desc'+table_len+'" contentEditable="true">'+data.description+'</div></td></tr>';
}


function prepareActionDropDownData(actions,selAction){
    var actionData= '<option value="">-Select Action-</option>';
    $.each(actions, function (index, action) {
        if(action==selAction){
            actionData=actionData+'<option value="'+action+'" selected>'+action_args_object[action].title+'</option>';
        }else{
            actionData=actionData+'<option value="'+action+'">'+action_args_object[action].title+'</option>';
        }
    });
    return actionData;
}


function addNewRow(isAddHeaderRow){   
    if(isAddHeaderRow){
        addHeaderRow();
    }
    var table=document.getElementById("ot_data_table");
    var  table_len=(table.rows.length)-1;
    table_len++;
    table.insertRow(table_len).outerHTML='<tr><td><input type="checkbox" id="chk'+table_len+'"/><input type="hidden" name="stepId" id="stepId'+table_len+'" value="0"></td>  <td>'+table_len+'</td>  <td><select id="action'+table_len+'" onchange="populateArgsAndDesc(this,'+table_len+')">'+actionDD+'</select></td> <td><dl class="dropdown_Arug" id="args_p'+table_len+'">           <dt><a href="#">     <p class="multiSel"></p>   <span class="dropdown_img"></span> </a> </dt>   <dd> <div class="mutliSelect" id="args'+table_len+'"></div> </dd> </dl> </td><td><div id="desc'+table_len+'" contentEditable="true">NO ACTION</div></td></tr>';
}

function addHeaderRow(){
    var table=document.getElementById("ot_data_table");
    var  table_len=(table.rows.length)-1;
    table_len++;
    table.insertRow(table_len).outerHTML='<tr><th><input type="checkbox" id="chkAll" /></th> <th>#</th><th>Action</th> <th>Arguments</th><th>Description</th></tr>';
}

function populateArgsAndDesc(thisObj,no){
    var value=thisObj.value;
    if(value==''){
        if(no!=undefined){
            document.getElementById("desc"+no).innerHTML='No Action';
            document.getElementById("args"+no).innerHTML='No Action';
        }
    }else{
        var actionValues=action_args_object[value];
        var argsValue=prepareArgs(actionValues.args,no);        
        if(no!=undefined){            
            document.getElementById("desc"+no).innerHTML=actionValues.desc;
            document.getElementById("args"+no).innerHTML=argsValue;
        }   
    }
    $('#args_p'+no+' dt a p').html('');    
}

function prepareArgs(args,no,argValues){
    var argsValue='<ul>';
    var argCount=1;
    if(args.length>0){
        $.each(args, function (index, arg) {
            var key=arg.name;
            var type=arg.type;
            var defaultValue=arg.values;
           // var keys=Object.keys(arg);
            //$.each(keys, function (argIndex, key) {
                var valStr='';
                var checkedStr='';       
                var disabledStr='disabled';         
                //var valStr=JSON.stringify(arg[key]);
                //var subArgs=arg[key];
               /* if(valStr.startsWith('[') && valStr.endsWith(']')){
                    $.each(subArgs, function (subArgIndex, subKey) {
                        var eleName=key+'@'+subKey.name;
                        var eleValue=subKey.value;            
                        if(argValues!=undefined && argValues[eleName]!=undefined){
                            eleValue=argValues[eleName];
                        }        
                        argsValue+='<li><input type="checkbox" value="'+eleName+'" />'+eleName+'</li><li><input type="text" placeholder="Type Value" name="'+eleName+'" id="'+eleName+no+'" value="'+eleValue+'"/></li>';
                        argCount++;
                    });
                }else{*/
                    if(argValues!=undefined && argValues[key]!=undefined){
                        valStr=argValues[key];
                    }
                    if(valStr!=''){
                        checkedStr='checked';
                        disabledStr='';
                    }else{
                        valStr=defaultValue;
                    }                  
                    if(type=='Text'){
                        argsValue+='<li><input type="checkbox" value="'+key+'"'+ checkedStr+' />'+key+'</li><li><input type="text" placeholder="Type Value" name="'+key+'" id="'+key+no+'" value="'+valStr+'"'+disabledStr+'/></li>';
                    }else{
                        var valueOptions='';
                        if(defaultValue!=''){
                            valueOptions=buildArgsValueOptions(defaultValue,valStr);                        
                        }
                        argsValue+='<li><input type="checkbox" value="'+key+'"'+ checkedStr+' />'+key+'</li><li><select name="'+key+'" id="'+key+no+'"'+disabledStr+'><option value="">- Select -</option>'+valueOptions+'</select></li>';
                    }
                    argCount++;
               // }                      
            //});
        });
    }
    argsValue+='</ul>';
    return argsValue;
}

function buildArgsValueOptions(listVals,argValue){
    var optVals="";
    try{
        var valArr=listVals.split(",");
        $.each( valArr, function( index, value ) {
            var selectedStr='';
            if(value!=''){
                if(value==argValue){
                    selectedStr='selected';
                }
                optVals+='<option value="'+value+'" '+selectedStr+'>'+value+'</option>';
            }
        });
    }catch(err){
        console.log(err);
        optVals="";
    }
    return optVals;  
}


function prepareEditArgs(actionValue,allArgs,no){
    if(allArgs!=''){    
        var argsValues={};       
        var argArr=allArgs.split(', ');
        $.each(argArr, function (index, argObject) {
             var keyValue=argObject.split(":");
             argsValues[keyValue[0]]=keyValue[1];
        });
        var actionObj=action_args_object[actionValue];
        return prepareArgs(actionObj.args,no,argsValues);        
    }
    return "";
}


/*function generateYAML(){   
    opentestTableResult = opentestTableResult.filter(function(item) { 
        return item != undefined
    })
    var data = {fileAdd:"GJY",tcData:JSON.stringify(opentestTableResult)};
    sendAJAX(data,app_server_url,function(data){
       // alert(data.data.data);
       var testsuitebyteArray = new Uint8Array(data.data.data);
       var a = window.document.createElement('a');
       a.href = window.URL.createObjectURL(new Blob([testsuitebyteArray], {type: 'data:text/plain'}));
       a.download = 'test.yaml';
       document.body.appendChild(a);
       a.click();
       document.body.removeChild(a);
    });

}*/


function generateOTYAML(){
    componentversionId=(currentSelectedNode.id).split("_")[2];    
    var data = {fileAdd:"GJY",versionid: componentversionId,selectedscenarioids:seletectedscenariosId};
    sendAJAX(data,app_server_url,function(data){
       // alert(data.data.data);
       var testsuitebyteArray = new Uint8Array(data.data.data);
       var a = window.document.createElement('a');
       //application/zip , text/plain
       a.href = window.URL.createObjectURL(new Blob([testsuitebyteArray], {type: 'data:application/zip'}));
       a.download = data.fileName+'.zip';
       document.body.appendChild(a);
       a.click();
       document.body.removeChild(a);
    });

}

$(document).on('click','.dropdown_Arug dt a', function(){
    var parentID=$(this).parent().parent().attr("id"); 
    var isHidden=$("#"+parentID+" dd ul").is(':hidden');
    $(".dropdown_Arug dd ul").hide();  
    if(isHidden){
        $("#"+parentID+" dd ul").slideToggle('fast');
        $("#"+parentID+" dd ul").show();
    }
});

function getSelectedValue(id) {
    return $("#" + id).find("dt a span.value").html();
}

/*$(document).bind('click', function(e) {
    alert('bind in');
var $clicked = $(e.target);
if (!$clicked.parents().hasClass("dropdown_Arug")) $(".dropdown_Arug dd ul").hide();
});*/

$(document).on('click','.mutliSelect input[type="checkbox"]',function() {
    var multiSelectElement= $(this).closest('.mutliSelect');
    var title = multiSelectElement.find('input[type="checkbox"]').val(),
    title = $(this).val() + ",";
    var dropdownId=multiSelectElement.parent().parent().attr("id");
    if ($(this).is(':checked')) {
        var html = '<span title="' + title + '">' + title + '</span>';
        $('#'+dropdownId+' dt a p').append(html);
    } else {
        $('#'+dropdownId+' dt a p').find('span[title="' + title + '"]').remove();
    }
});

$(document).on('click','#ot_data_table #chkAll',function() {  
    if($(this).is(":checked")) {
        $('#ot_data_table td:first-child input[type="checkbox"]').prop('checked', true);
    }else{
        $('#ot_data_table td:first-child input[type="checkbox"]').prop('checked', false);
    }
});


$(document).on('change','#ot_data_table input[type="text"]',function() {
    var elementId=this.id;
    var elementVal=this.value;
    var elementName=this.name;
    var rowNum=elementId.slice(-1);
    var description=$('#desc'+rowNum).html();
    description=description.replace('${'+elementName+'}',elementVal);
    $('#desc'+rowNum).html(description);
});
